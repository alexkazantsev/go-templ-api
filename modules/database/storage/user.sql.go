// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package storage

import (
	"context"

	"github.com/google/uuid"
)

const create = `-- name: Create :one
INSERT INTO users (name, email, password)
VALUES ($1, $2, $3)
RETURNING id, name, email, password, created_at
`

type CreateParams struct {
	Name     string
	Email    string
	Password string
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (User, error) {
	row := q.queryRow(ctx, q.createStmt, create, arg.Name, arg.Email, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}

const findOne = `-- name: FindOne :one
SELECT id, name, email, password, created_at
FROM users
WHERE id = $1
`

func (q *Queries) FindOne(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.queryRow(ctx, q.findOneStmt, findOne, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}
